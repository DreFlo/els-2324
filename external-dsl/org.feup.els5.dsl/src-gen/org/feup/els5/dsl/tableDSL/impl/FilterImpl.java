/**
 * generated by Xtext 2.33.0
 */
package org.feup.els5.dsl.tableDSL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.feup.els5.dsl.tableDSL.Filter;
import org.feup.els5.dsl.tableDSL.FilterDenylist;
import org.feup.els5.dsl.tableDSL.FilterExceptlist;
import org.feup.els5.dsl.tableDSL.TableDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Filter</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.feup.els5.dsl.tableDSL.impl.FilterImpl#getDenylist <em>Denylist</em>}</li>
 *   <li>{@link org.feup.els5.dsl.tableDSL.impl.FilterImpl#getExceptlist <em>Exceptlist</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FilterImpl extends OperationImpl implements Filter
{
  /**
   * The cached value of the '{@link #getDenylist() <em>Denylist</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDenylist()
   * @generated
   * @ordered
   */
  protected FilterDenylist denylist;

  /**
   * The cached value of the '{@link #getExceptlist() <em>Exceptlist</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExceptlist()
   * @generated
   * @ordered
   */
  protected FilterExceptlist exceptlist;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FilterImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TableDSLPackage.Literals.FILTER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FilterDenylist getDenylist()
  {
    return denylist;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDenylist(FilterDenylist newDenylist, NotificationChain msgs)
  {
    FilterDenylist oldDenylist = denylist;
    denylist = newDenylist;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TableDSLPackage.FILTER__DENYLIST, oldDenylist, newDenylist);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDenylist(FilterDenylist newDenylist)
  {
    if (newDenylist != denylist)
    {
      NotificationChain msgs = null;
      if (denylist != null)
        msgs = ((InternalEObject)denylist).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TableDSLPackage.FILTER__DENYLIST, null, msgs);
      if (newDenylist != null)
        msgs = ((InternalEObject)newDenylist).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TableDSLPackage.FILTER__DENYLIST, null, msgs);
      msgs = basicSetDenylist(newDenylist, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TableDSLPackage.FILTER__DENYLIST, newDenylist, newDenylist));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FilterExceptlist getExceptlist()
  {
    return exceptlist;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExceptlist(FilterExceptlist newExceptlist, NotificationChain msgs)
  {
    FilterExceptlist oldExceptlist = exceptlist;
    exceptlist = newExceptlist;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TableDSLPackage.FILTER__EXCEPTLIST, oldExceptlist, newExceptlist);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExceptlist(FilterExceptlist newExceptlist)
  {
    if (newExceptlist != exceptlist)
    {
      NotificationChain msgs = null;
      if (exceptlist != null)
        msgs = ((InternalEObject)exceptlist).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TableDSLPackage.FILTER__EXCEPTLIST, null, msgs);
      if (newExceptlist != null)
        msgs = ((InternalEObject)newExceptlist).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TableDSLPackage.FILTER__EXCEPTLIST, null, msgs);
      msgs = basicSetExceptlist(newExceptlist, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TableDSLPackage.FILTER__EXCEPTLIST, newExceptlist, newExceptlist));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TableDSLPackage.FILTER__DENYLIST:
        return basicSetDenylist(null, msgs);
      case TableDSLPackage.FILTER__EXCEPTLIST:
        return basicSetExceptlist(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TableDSLPackage.FILTER__DENYLIST:
        return getDenylist();
      case TableDSLPackage.FILTER__EXCEPTLIST:
        return getExceptlist();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TableDSLPackage.FILTER__DENYLIST:
        setDenylist((FilterDenylist)newValue);
        return;
      case TableDSLPackage.FILTER__EXCEPTLIST:
        setExceptlist((FilterExceptlist)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TableDSLPackage.FILTER__DENYLIST:
        setDenylist((FilterDenylist)null);
        return;
      case TableDSLPackage.FILTER__EXCEPTLIST:
        setExceptlist((FilterExceptlist)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TableDSLPackage.FILTER__DENYLIST:
        return denylist != null;
      case TableDSLPackage.FILTER__EXCEPTLIST:
        return exceptlist != null;
    }
    return super.eIsSet(featureID);
  }

} //FilterImpl
