/**
 * generated by Xtext 2.33.0
 */
package org.feup.els5.dsl.tableDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.feup.els5.dsl.tableDSL.ObjectTypeSelector;
import org.feup.els5.dsl.tableDSL.Reduce;
import org.feup.els5.dsl.tableDSL.TableDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Reduce</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.feup.els5.dsl.tableDSL.impl.ReduceImpl#getObjectClass <em>Object Class</em>}</li>
 *   <li>{@link org.feup.els5.dsl.tableDSL.impl.ReduceImpl#getFunctions <em>Functions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ReduceImpl extends OperationImpl implements Reduce
{
  /**
   * The cached value of the '{@link #getObjectClass() <em>Object Class</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjectClass()
   * @generated
   * @ordered
   */
  protected ObjectTypeSelector objectClass;

  /**
   * The cached value of the '{@link #getFunctions() <em>Functions</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctions()
   * @generated
   * @ordered
   */
  protected EList<String> functions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ReduceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TableDSLPackage.Literals.REDUCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ObjectTypeSelector getObjectClass()
  {
    return objectClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetObjectClass(ObjectTypeSelector newObjectClass, NotificationChain msgs)
  {
    ObjectTypeSelector oldObjectClass = objectClass;
    objectClass = newObjectClass;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TableDSLPackage.REDUCE__OBJECT_CLASS, oldObjectClass, newObjectClass);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObjectClass(ObjectTypeSelector newObjectClass)
  {
    if (newObjectClass != objectClass)
    {
      NotificationChain msgs = null;
      if (objectClass != null)
        msgs = ((InternalEObject)objectClass).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TableDSLPackage.REDUCE__OBJECT_CLASS, null, msgs);
      if (newObjectClass != null)
        msgs = ((InternalEObject)newObjectClass).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TableDSLPackage.REDUCE__OBJECT_CLASS, null, msgs);
      msgs = basicSetObjectClass(newObjectClass, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TableDSLPackage.REDUCE__OBJECT_CLASS, newObjectClass, newObjectClass));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getFunctions()
  {
    if (functions == null)
    {
      functions = new EDataTypeEList<String>(String.class, this, TableDSLPackage.REDUCE__FUNCTIONS);
    }
    return functions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TableDSLPackage.REDUCE__OBJECT_CLASS:
        return basicSetObjectClass(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TableDSLPackage.REDUCE__OBJECT_CLASS:
        return getObjectClass();
      case TableDSLPackage.REDUCE__FUNCTIONS:
        return getFunctions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TableDSLPackage.REDUCE__OBJECT_CLASS:
        setObjectClass((ObjectTypeSelector)newValue);
        return;
      case TableDSLPackage.REDUCE__FUNCTIONS:
        getFunctions().clear();
        getFunctions().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TableDSLPackage.REDUCE__OBJECT_CLASS:
        setObjectClass((ObjectTypeSelector)null);
        return;
      case TableDSLPackage.REDUCE__FUNCTIONS:
        getFunctions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TableDSLPackage.REDUCE__OBJECT_CLASS:
        return objectClass != null;
      case TableDSLPackage.REDUCE__FUNCTIONS:
        return functions != null && !functions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (functions: ");
    result.append(functions);
    result.append(')');
    return result.toString();
  }

} //ReduceImpl
