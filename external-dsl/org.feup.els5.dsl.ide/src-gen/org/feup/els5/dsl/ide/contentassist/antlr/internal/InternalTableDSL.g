/*
 * generated by Xtext 2.32.0
 */
grammar InternalTableDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.feup.els5.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.feup.els5.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.feup.els5.dsl.services.TableDSLGrammarAccess;

}
@parser::members {
	private TableDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(TableDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleStart
entryRuleStart
:
{ before(grammarAccess.getStartRule()); }
	 ruleStart
{ after(grammarAccess.getStartRule()); } 
	 EOF 
;

// Rule Start
ruleStart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartAccess().getGroup()); }
		(rule__Start__Group__0)
		{ after(grammarAccess.getStartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreateTable
entryRuleCreateTable
:
{ before(grammarAccess.getCreateTableRule()); }
	 ruleCreateTable
{ after(grammarAccess.getCreateTableRule()); } 
	 EOF 
;

// Rule CreateTable
ruleCreateTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreateTableAccess().getGroup()); }
		(rule__CreateTable__Group__0)
		{ after(grammarAccess.getCreateTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTableAction
entryRuleTableAction
:
{ before(grammarAccess.getTableActionRule()); }
	 ruleTableAction
{ after(grammarAccess.getTableActionRule()); } 
	 EOF 
;

// Rule TableAction
ruleTableAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableActionAccess().getAlternatives()); }
		(rule__TableAction__Alternatives)
		{ after(grammarAccess.getTableActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoadData
entryRuleLoadData
:
{ before(grammarAccess.getLoadDataRule()); }
	 ruleLoadData
{ after(grammarAccess.getLoadDataRule()); } 
	 EOF 
;

// Rule LoadData
ruleLoadData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadDataAccess().getGroup()); }
		(rule__LoadData__Group__0)
		{ after(grammarAccess.getLoadDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTableInputPath
entryRuleTableInputPath
:
{ before(grammarAccess.getTableInputPathRule()); }
	 ruleTableInputPath
{ after(grammarAccess.getTableInputPathRule()); } 
	 EOF 
;

// Rule TableInputPath
ruleTableInputPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableInputPathAccess().getGroup()); }
		(rule__TableInputPath__Group__0)
		{ after(grammarAccess.getTableInputPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getAlternatives()); }
		(rule__Operation__Alternatives)
		{ after(grammarAccess.getOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelect
entryRuleSelect
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAccess().getGroup()); }
		(rule__Select__Group__0)
		{ after(grammarAccess.getSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRenameColumn
entryRuleRenameColumn
:
{ before(grammarAccess.getRenameColumnRule()); }
	 ruleRenameColumn
{ after(grammarAccess.getRenameColumnRule()); } 
	 EOF 
;

// Rule RenameColumn
ruleRenameColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameColumnAccess().getGroup()); }
		(rule__RenameColumn__Group__0)
		{ after(grammarAccess.getRenameColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRenameColumnPair
entryRuleRenameColumnPair
:
{ before(grammarAccess.getRenameColumnPairRule()); }
	 ruleRenameColumnPair
{ after(grammarAccess.getRenameColumnPairRule()); } 
	 EOF 
;

// Rule RenameColumnPair
ruleRenameColumnPair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameColumnPairAccess().getAlternatives()); }
		(rule__RenameColumnPair__Alternatives)
		{ after(grammarAccess.getRenameColumnPairAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRenameColumnToPair
entryRuleRenameColumnToPair
:
{ before(grammarAccess.getRenameColumnToPairRule()); }
	 ruleRenameColumnToPair
{ after(grammarAccess.getRenameColumnToPairRule()); } 
	 EOF 
;

// Rule RenameColumnToPair
ruleRenameColumnToPair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameColumnToPairAccess().getGroup()); }
		(rule__RenameColumnToPair__Group__0)
		{ after(grammarAccess.getRenameColumnToPairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRenameColumnPrependPair
entryRuleRenameColumnPrependPair
:
{ before(grammarAccess.getRenameColumnPrependPairRule()); }
	 ruleRenameColumnPrependPair
{ after(grammarAccess.getRenameColumnPrependPairRule()); } 
	 EOF 
;

// Rule RenameColumnPrependPair
ruleRenameColumnPrependPair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameColumnPrependPairAccess().getGroup()); }
		(rule__RenameColumnPrependPair__Group__0)
		{ after(grammarAccess.getRenameColumnPrependPairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRenameColumnAppendPair
entryRuleRenameColumnAppendPair
:
{ before(grammarAccess.getRenameColumnAppendPairRule()); }
	 ruleRenameColumnAppendPair
{ after(grammarAccess.getRenameColumnAppendPairRule()); } 
	 EOF 
;

// Rule RenameColumnAppendPair
ruleRenameColumnAppendPair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRenameColumnAppendPairAccess().getGroup()); }
		(rule__RenameColumnAppendPair__Group__0)
		{ after(grammarAccess.getRenameColumnAppendPairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtract
entryRuleExtract
:
{ before(grammarAccess.getExtractRule()); }
	 ruleExtract
{ after(grammarAccess.getExtractRule()); } 
	 EOF 
;

// Rule Extract
ruleExtract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtractAccess().getGroup()); }
		(rule__Extract__Group__0)
		{ after(grammarAccess.getExtractAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelector
entryRuleSelector
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getAlternatives()); }
		(rule__Selector__Alternatives)
		{ after(grammarAccess.getSelectorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparator
entryRuleComparator
:
{ before(grammarAccess.getComparatorRule()); }
	 ruleComparator
{ after(grammarAccess.getComparatorRule()); } 
	 EOF 
;

// Rule Comparator
ruleComparator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparatorAccess().getGroup()); }
		(rule__Comparator__Group__0)
		{ after(grammarAccess.getComparatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSquashRows
entryRuleSquashRows
:
{ before(grammarAccess.getSquashRowsRule()); }
	 ruleSquashRows
{ after(grammarAccess.getSquashRowsRule()); } 
	 EOF 
;

// Rule SquashRows
ruleSquashRows 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSquashRowsAccess().getGroup()); }
		(rule__SquashRows__Group__0)
		{ after(grammarAccess.getSquashRowsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilter
entryRuleFilter
:
{ before(grammarAccess.getFilterRule()); }
	 ruleFilter
{ after(grammarAccess.getFilterRule()); } 
	 EOF 
;

// Rule Filter
ruleFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterAccess().getGroup()); }
		(rule__Filter__Group__0)
		{ after(grammarAccess.getFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterDenylist
entryRuleFilterDenylist
:
{ before(grammarAccess.getFilterDenylistRule()); }
	 ruleFilterDenylist
{ after(grammarAccess.getFilterDenylistRule()); } 
	 EOF 
;

// Rule FilterDenylist
ruleFilterDenylist 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterDenylistAccess().getGroup()); }
		(rule__FilterDenylist__Group__0)
		{ after(grammarAccess.getFilterDenylistAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterExceptlist
entryRuleFilterExceptlist
:
{ before(grammarAccess.getFilterExceptlistRule()); }
	 ruleFilterExceptlist
{ after(grammarAccess.getFilterExceptlistRule()); } 
	 EOF 
;

// Rule FilterExceptlist
ruleFilterExceptlist 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterExceptlistAccess().getGroup()); }
		(rule__FilterExceptlist__Group__0)
		{ after(grammarAccess.getFilterExceptlistAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterRule
entryRuleFilterRule
:
{ before(grammarAccess.getFilterRuleRule()); }
	 ruleFilterRule
{ after(grammarAccess.getFilterRuleRule()); } 
	 EOF 
;

// Rule FilterRule
ruleFilterRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterRuleAccess().getAlternatives()); }
		(rule__FilterRule__Alternatives)
		{ after(grammarAccess.getFilterRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterObjectTypeRule
entryRuleFilterObjectTypeRule
:
{ before(grammarAccess.getFilterObjectTypeRuleRule()); }
	 ruleFilterObjectTypeRule
{ after(grammarAccess.getFilterObjectTypeRuleRule()); } 
	 EOF 
;

// Rule FilterObjectTypeRule
ruleFilterObjectTypeRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterObjectTypeRuleAccess().getGroup()); }
		(rule__FilterObjectTypeRule__Group__0)
		{ after(grammarAccess.getFilterObjectTypeRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterColumnRule
entryRuleFilterColumnRule
:
{ before(grammarAccess.getFilterColumnRuleRule()); }
	 ruleFilterColumnRule
{ after(grammarAccess.getFilterColumnRuleRule()); } 
	 EOF 
;

// Rule FilterColumnRule
ruleFilterColumnRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterColumnRuleAccess().getGroup()); }
		(rule__FilterColumnRule__Group__0)
		{ after(grammarAccess.getFilterColumnRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableActionAccess().getLoadDataParserRuleCall_0()); }
		ruleLoadData
		{ after(grammarAccess.getTableActionAccess().getLoadDataParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTableActionAccess().getOperationParserRuleCall_1()); }
		ruleOperation
		{ after(grammarAccess.getTableActionAccess().getOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTableActionAccess().getGroup_2()); }
		(rule__TableAction__Group_2__0)
		{ after(grammarAccess.getTableActionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getSelectParserRuleCall_0()); }
		ruleSelect
		{ after(grammarAccess.getOperationAccess().getSelectParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getRenameColumnParserRuleCall_1()); }
		ruleRenameColumn
		{ after(grammarAccess.getOperationAccess().getRenameColumnParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getExtractParserRuleCall_2()); }
		ruleExtract
		{ after(grammarAccess.getOperationAccess().getExtractParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getSquashRowsParserRuleCall_3()); }
		ruleSquashRows
		{ after(grammarAccess.getOperationAccess().getSquashRowsParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getFilterParserRuleCall_4()); }
		ruleFilter
		{ after(grammarAccess.getOperationAccess().getFilterParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnPair__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameColumnPairAccess().getRenameColumnToPairParserRuleCall_0()); }
		ruleRenameColumnToPair
		{ after(grammarAccess.getRenameColumnPairAccess().getRenameColumnToPairParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRenameColumnPairAccess().getRenameColumnAppendPairParserRuleCall_1()); }
		ruleRenameColumnAppendPair
		{ after(grammarAccess.getRenameColumnPairAccess().getRenameColumnAppendPairParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRenameColumnPairAccess().getRenameColumnPrependPairParserRuleCall_2()); }
		ruleRenameColumnPrependPair
		{ after(grammarAccess.getRenameColumnPairAccess().getRenameColumnPrependPairParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getGroup_0()); }
		(rule__Selector__Group_0__0)
		{ after(grammarAccess.getSelectorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorAccess().getGroup_1()); }
		(rule__Selector__Group_1__0)
		{ after(grammarAccess.getSelectorAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorAccess().getGroup_2()); }
		(rule__Selector__Group_2__0)
		{ after(grammarAccess.getSelectorAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorAccess().getGroup_3()); }
		(rule__Selector__Group_3__0)
		{ after(grammarAccess.getSelectorAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterRuleAccess().getFilterColumnRuleParserRuleCall_0()); }
		ruleFilterColumnRule
		{ after(grammarAccess.getFilterRuleAccess().getFilterColumnRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFilterRuleAccess().getFilterObjectTypeRuleParserRuleCall_1()); }
		ruleFilterObjectTypeRule
		{ after(grammarAccess.getFilterRuleAccess().getFilterObjectTypeRuleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Start__Group__0__Impl
	rule__Start__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAccess().getActionsAssignment_0()); }
	(rule__Start__ActionsAssignment_0)?
	{ after(grammarAccess.getStartAccess().getActionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Start__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartAccess().getActionsAssignment_1()); }
	(rule__Start__ActionsAssignment_1)*
	{ after(grammarAccess.getStartAccess().getActionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CreateTable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTable__Group__0__Impl
	rule__CreateTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableAccess().getCreateKeyword_0()); }
	('create')?
	{ after(grammarAccess.getCreateTableAccess().getCreateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTable__Group__1__Impl
	rule__CreateTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableAccess().getTableKeyword_1()); }
	'table'
	{ after(grammarAccess.getCreateTableAccess().getTableKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTable__Group__2__Impl
	rule__CreateTable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableAccess().getFromKeyword_2()); }
	'from'
	{ after(grammarAccess.getCreateTableAccess().getFromKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTable__Group__3__Impl
	rule__CreateTable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableAccess().getTableInputPathParserRuleCall_3()); }
	ruleTableInputPath
	{ after(grammarAccess.getCreateTableAccess().getTableInputPathParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CreateTable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CreateTable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreateTableAccess().getANY_OTHERTerminalRuleCall_4()); }
	RULE_ANY_OTHER
	{ after(grammarAccess.getCreateTableAccess().getANY_OTHERTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableAction__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableAction__Group_2__0__Impl
	rule__TableAction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableAction__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableActionAccess().getOutputParserRuleCall_2_0()); }
	ruleOutput
	{ after(grammarAccess.getTableActionAccess().getOutputParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableAction__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableAction__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableAction__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableActionAccess().getANY_OTHERTerminalRuleCall_2_1()); }
	RULE_ANY_OTHER
	{ after(grammarAccess.getTableActionAccess().getANY_OTHERTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LoadData__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadData__Group__0__Impl
	rule__LoadData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadData__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadDataAccess().getLoadKeyword_0()); }
	'load'
	{ after(grammarAccess.getLoadDataAccess().getLoadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadData__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadData__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadData__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadDataAccess().getTableInputPathParserRuleCall_1()); }
	ruleTableInputPath
	{ after(grammarAccess.getLoadDataAccess().getTableInputPathParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableInputPath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableInputPath__Group__0__Impl
	rule__TableInputPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInputPath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableInputPathAccess().getPathPatternsAssignment_0()); }
	(rule__TableInputPath__PathPatternsAssignment_0)
	{ after(grammarAccess.getTableInputPathAccess().getPathPatternsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInputPath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableInputPath__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInputPath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableInputPathAccess().getGroup_1()); }
	(rule__TableInputPath__Group_1__0)*
	{ after(grammarAccess.getTableInputPathAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableInputPath__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableInputPath__Group_1__0__Impl
	rule__TableInputPath__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInputPath__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableInputPathAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getTableInputPathAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInputPath__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableInputPath__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInputPath__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableInputPathAccess().getPathPatternsAssignment_1_1()); }
	(rule__TableInputPath__PathPatternsAssignment_1_1)
	{ after(grammarAccess.getTableInputPathAccess().getPathPatternsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
	'output'
	{ after(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
	rule__Output__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getToKeyword_1()); }
	'to'
	{ after(grammarAccess.getOutputAccess().getToKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__2__Impl
	rule__Output__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputPathsAssignment_2()); }
	(rule__Output__OutputPathsAssignment_2)
	{ after(grammarAccess.getOutputAccess().getOutputPathsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_3()); }
	(rule__Output__Group_3__0)*
	{ after(grammarAccess.getOutputAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_3__0__Impl
	rule__Output__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getOutputAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputPathsAssignment_3_1()); }
	(rule__Output__OutputPathsAssignment_3_1)
	{ after(grammarAccess.getOutputAccess().getOutputPathsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectKeyword_0()); }
	'select'
	{ after(grammarAccess.getSelectAccess().getSelectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getColumnsPatternsAssignment_1()); }
	(rule__Select__ColumnsPatternsAssignment_1)
	{ after(grammarAccess.getSelectAccess().getColumnsPatternsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getGroup_2()); }
	(rule__Select__Group_2__0)*
	{ after(grammarAccess.getSelectAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2__0__Impl
	rule__Select__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getSelectAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getColumnPatternsAssignment_2_1()); }
	(rule__Select__ColumnPatternsAssignment_2_1)
	{ after(grammarAccess.getSelectAccess().getColumnPatternsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RenameColumn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumn__Group__0__Impl
	rule__RenameColumn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnAccess().getRenameKeyword_0()); }
	'rename'
	{ after(grammarAccess.getRenameColumnAccess().getRenameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumn__Group__1__Impl
	rule__RenameColumn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnAccess().getColumnKeyword_1()); }
	('column')?
	{ after(grammarAccess.getRenameColumnAccess().getColumnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumn__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRenameColumnAccess().getRenameTuplesAssignment_2()); }
		(rule__RenameColumn__RenameTuplesAssignment_2)
		{ after(grammarAccess.getRenameColumnAccess().getRenameTuplesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getRenameColumnAccess().getRenameTuplesAssignment_2()); }
		(rule__RenameColumn__RenameTuplesAssignment_2)*
		{ after(grammarAccess.getRenameColumnAccess().getRenameTuplesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RenameColumnToPair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnToPair__Group__0__Impl
	rule__RenameColumnToPair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnToPair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnToPairAccess().getOldNameAssignment_0()); }
	(rule__RenameColumnToPair__OldNameAssignment_0)
	{ after(grammarAccess.getRenameColumnToPairAccess().getOldNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnToPair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnToPair__Group__1__Impl
	rule__RenameColumnToPair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnToPair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnToPairAccess().getToKeyword_1()); }
	'to'
	{ after(grammarAccess.getRenameColumnToPairAccess().getToKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnToPair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnToPair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnToPair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnToPairAccess().getNewNameAssignment_2()); }
	(rule__RenameColumnToPair__NewNameAssignment_2)
	{ after(grammarAccess.getRenameColumnToPairAccess().getNewNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RenameColumnPrependPair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnPrependPair__Group__0__Impl
	rule__RenameColumnPrependPair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnPrependPair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnPrependPairAccess().getOldNameAssignment_0()); }
	(rule__RenameColumnPrependPair__OldNameAssignment_0)
	{ after(grammarAccess.getRenameColumnPrependPairAccess().getOldNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnPrependPair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnPrependPair__Group__1__Impl
	rule__RenameColumnPrependPair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnPrependPair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnPrependPairAccess().getPrependKeyword_1()); }
	'prepend'
	{ after(grammarAccess.getRenameColumnPrependPairAccess().getPrependKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnPrependPair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnPrependPair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnPrependPair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnPrependPairAccess().getPrefixAssignment_2()); }
	(rule__RenameColumnPrependPair__PrefixAssignment_2)
	{ after(grammarAccess.getRenameColumnPrependPairAccess().getPrefixAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RenameColumnAppendPair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnAppendPair__Group__0__Impl
	rule__RenameColumnAppendPair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnAppendPair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnAppendPairAccess().getOldNameAssignment_0()); }
	(rule__RenameColumnAppendPair__OldNameAssignment_0)
	{ after(grammarAccess.getRenameColumnAppendPairAccess().getOldNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnAppendPair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnAppendPair__Group__1__Impl
	rule__RenameColumnAppendPair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnAppendPair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnAppendPairAccess().getAppendKeyword_1()); }
	'append'
	{ after(grammarAccess.getRenameColumnAppendPairAccess().getAppendKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnAppendPair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RenameColumnAppendPair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnAppendPair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRenameColumnAppendPairAccess().getSuffixAssignment_2()); }
	(rule__RenameColumnAppendPair__SuffixAssignment_2)
	{ after(grammarAccess.getRenameColumnAppendPairAccess().getSuffixAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Extract__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extract__Group__0__Impl
	rule__Extract__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractAccess().getExtractKeyword_0()); }
	'extract'
	{ after(grammarAccess.getExtractAccess().getExtractKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extract__Group__1__Impl
	rule__Extract__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractAccess().getTargetColumnsAssignment_1()); }
	(rule__Extract__TargetColumnsAssignment_1)
	{ after(grammarAccess.getExtractAccess().getTargetColumnsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extract__Group__2__Impl
	rule__Extract__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractAccess().getGroup_2()); }
	(rule__Extract__Group_2__0)*
	{ after(grammarAccess.getExtractAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extract__Group__3__Impl
	rule__Extract__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractAccess().getFromKeyword_3()); }
	'from'
	{ after(grammarAccess.getExtractAccess().getFromKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extract__Group__4__Impl
	rule__Extract__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractAccess().getSourceColumnAssignment_4()); }
	(rule__Extract__SourceColumnAssignment_4)
	{ after(grammarAccess.getExtractAccess().getSourceColumnAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extract__Group__5__Impl
	rule__Extract__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractAccess().getSelectKeyword_5()); }
	'select'
	{ after(grammarAccess.getExtractAccess().getSelectKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extract__Group__6__Impl
	rule__Extract__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractAccess().getSelectorAssignment_6()); }
	(rule__Extract__SelectorAssignment_6)
	{ after(grammarAccess.getExtractAccess().getSelectorAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extract__Group__7__Impl
	rule__Extract__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractAccess().getSortKeyword_7()); }
	'sort'
	{ after(grammarAccess.getExtractAccess().getSortKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extract__Group__8__Impl
	rule__Extract__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractAccess().getByKeyword_8()); }
	('by')?
	{ after(grammarAccess.getExtractAccess().getByKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extract__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractAccess().getComparatorAssignment_9()); }
	(rule__Extract__ComparatorAssignment_9)
	{ after(grammarAccess.getExtractAccess().getComparatorAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Extract__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extract__Group_2__0__Impl
	rule__Extract__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getExtractAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extract__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtractAccess().getTargetColumnsAssignment_2_1()); }
	(rule__Extract__TargetColumnsAssignment_2_1)
	{ after(grammarAccess.getExtractAccess().getTargetColumnsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_0__0__Impl
	rule__Selector__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getSelectorAction_0_0()); }
	()
	{ after(grammarAccess.getSelectorAccess().getSelectorAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getMAXKeyword_0_1()); }
	'MAX'
	{ after(grammarAccess.getSelectorAccess().getMAXKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1__0__Impl
	rule__Selector__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getSelectorAction_1_0()); }
	()
	{ after(grammarAccess.getSelectorAccess().getSelectorAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getMINKeyword_1_1()); }
	'MIN'
	{ after(grammarAccess.getSelectorAccess().getMINKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_2__0__Impl
	rule__Selector__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getSelectorAction_2_0()); }
	()
	{ after(grammarAccess.getSelectorAccess().getSelectorAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getMEDIANKeyword_2_1()); }
	'MEDIAN'
	{ after(grammarAccess.getSelectorAccess().getMEDIANKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_3__0__Impl
	rule__Selector__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getTOPKeyword_3_0()); }
	'TOP'
	{ after(grammarAccess.getSelectorAccess().getTOPKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getNAssignment_3_1()); }
	(rule__Selector__NAssignment_3_1)
	{ after(grammarAccess.getSelectorAccess().getNAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group__0__Impl
	rule__Comparator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getKeysAssignment_0()); }
	(rule__Comparator__KeysAssignment_0)
	{ after(grammarAccess.getComparatorAccess().getKeysAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getGroup_1()); }
	(rule__Comparator__Group_1__0)*
	{ after(grammarAccess.getComparatorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_1__0__Impl
	rule__Comparator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getComparatorAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparatorAccess().getKeysAssignment_1_1()); }
	(rule__Comparator__KeysAssignment_1_1)
	{ after(grammarAccess.getComparatorAccess().getKeysAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SquashRows__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquashRows__Group__0__Impl
	rule__SquashRows__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquashRowsAccess().getSquashKeyword_0()); }
	'squash'
	{ after(grammarAccess.getSquashRowsAccess().getSquashKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquashRows__Group__1__Impl
	rule__SquashRows__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquashRowsAccess().getRowsKeyword_1()); }
	('rows')?
	{ after(grammarAccess.getSquashRowsAccess().getRowsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquashRows__Group__2__Impl
	rule__SquashRows__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquashRowsAccess().getByKeyword_2()); }
	'by'
	{ after(grammarAccess.getSquashRowsAccess().getByKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquashRows__Group__3__Impl
	rule__SquashRows__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquashRowsAccess().getColumnsAssignment_3()); }
	(rule__SquashRows__ColumnsAssignment_3)
	{ after(grammarAccess.getSquashRowsAccess().getColumnsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquashRows__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquashRowsAccess().getGroup_4()); }
	(rule__SquashRows__Group_4__0)*
	{ after(grammarAccess.getSquashRowsAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SquashRows__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquashRows__Group_4__0__Impl
	rule__SquashRows__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquashRowsAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getSquashRowsAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquashRows__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquashRowsAccess().getColumnsAssignment_4_1()); }
	(rule__SquashRows__ColumnsAssignment_4_1)
	{ after(grammarAccess.getSquashRowsAccess().getColumnsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Filter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__0__Impl
	rule__Filter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getFilterKeyword_0()); }
	'filter'
	{ after(grammarAccess.getFilterAccess().getFilterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__1__Impl
	rule__Filter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getDenylistAssignment_1()); }
	(rule__Filter__DenylistAssignment_1)
	{ after(grammarAccess.getFilterAccess().getDenylistAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getExceptlistAssignment_2()); }
	(rule__Filter__ExceptlistAssignment_2)?
	{ after(grammarAccess.getFilterAccess().getExceptlistAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FilterDenylist__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterDenylist__Group__0__Impl
	rule__FilterDenylist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterDenylist__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterDenylistAccess().getDenyKeyword_0()); }
	'deny'
	{ after(grammarAccess.getFilterDenylistAccess().getDenyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterDenylist__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterDenylist__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterDenylist__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterDenylistAccess().getDenylistAssignment_1()); }
	(rule__FilterDenylist__DenylistAssignment_1)
	{ after(grammarAccess.getFilterDenylistAccess().getDenylistAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FilterExceptlist__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterExceptlist__Group__0__Impl
	rule__FilterExceptlist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExceptlist__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterExceptlistAccess().getExceptKeyword_0()); }
	'except'
	{ after(grammarAccess.getFilterExceptlistAccess().getExceptKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExceptlist__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterExceptlist__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExceptlist__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterExceptlistAccess().getExceptlistAssignment_1()); }
	(rule__FilterExceptlist__ExceptlistAssignment_1)
	{ after(grammarAccess.getFilterExceptlistAccess().getExceptlistAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FilterObjectTypeRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterObjectTypeRule__Group__0__Impl
	rule__FilterObjectTypeRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterObjectTypeRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterObjectTypeRuleAccess().getColumnKeyword_0()); }
	'column'
	{ after(grammarAccess.getFilterObjectTypeRuleAccess().getColumnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterObjectTypeRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterObjectTypeRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterObjectTypeRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterObjectTypeRuleAccess().getColumnPatternAssignment_1()); }
	(rule__FilterObjectTypeRule__ColumnPatternAssignment_1)
	{ after(grammarAccess.getFilterObjectTypeRuleAccess().getColumnPatternAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FilterColumnRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterColumnRule__Group__0__Impl
	rule__FilterColumnRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterColumnRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterColumnRuleAccess().getObjectKeyword_0()); }
	'object'
	{ after(grammarAccess.getFilterColumnRuleAccess().getObjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterColumnRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterColumnRule__Group__1__Impl
	rule__FilterColumnRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterColumnRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterColumnRuleAccess().getOfKeyword_1()); }
	('of')?
	{ after(grammarAccess.getFilterColumnRuleAccess().getOfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterColumnRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterColumnRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterColumnRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterColumnRuleAccess().getObjectClassAssignment_2()); }
	(rule__FilterColumnRule__ObjectClassAssignment_2)
	{ after(grammarAccess.getFilterColumnRuleAccess().getObjectClassAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Start__ActionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartAccess().getActionsCreateTableParserRuleCall_0_0()); }
		ruleCreateTable
		{ after(grammarAccess.getStartAccess().getActionsCreateTableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__ActionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartAccess().getActionsTableActionParserRuleCall_1_0()); }
		ruleTableAction
		{ after(grammarAccess.getStartAccess().getActionsTableActionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInputPath__PathPatternsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableInputPathAccess().getPathPatternsSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getTableInputPathAccess().getPathPatternsSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableInputPath__PathPatternsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableInputPathAccess().getPathPatternsSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTableInputPathAccess().getPathPatternsSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__OutputPathsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getOutputPathsSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getOutputAccess().getOutputPathsSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__OutputPathsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getOutputPathsSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getOutputAccess().getOutputPathsSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ColumnsPatternsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getColumnsPatternsSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSelectAccess().getColumnsPatternsSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ColumnPatternsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getColumnPatternsSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSelectAccess().getColumnPatternsSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumn__RenameTuplesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameColumnAccess().getRenameTuplesRenameColumnPairParserRuleCall_2_0()); }
		ruleRenameColumnPair
		{ after(grammarAccess.getRenameColumnAccess().getRenameTuplesRenameColumnPairParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnToPair__OldNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameColumnToPairAccess().getOldNameSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getRenameColumnToPairAccess().getOldNameSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnToPair__NewNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameColumnToPairAccess().getNewNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getRenameColumnToPairAccess().getNewNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnPrependPair__OldNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameColumnPrependPairAccess().getOldNameSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getRenameColumnPrependPairAccess().getOldNameSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnPrependPair__PrefixAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameColumnPrependPairAccess().getPrefixSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getRenameColumnPrependPairAccess().getPrefixSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnAppendPair__OldNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameColumnAppendPairAccess().getOldNameSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getRenameColumnAppendPairAccess().getOldNameSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RenameColumnAppendPair__SuffixAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRenameColumnAppendPairAccess().getSuffixSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getRenameColumnAppendPairAccess().getSuffixSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__TargetColumnsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtractAccess().getTargetColumnsSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getExtractAccess().getTargetColumnsSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__TargetColumnsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtractAccess().getTargetColumnsSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getExtractAccess().getTargetColumnsSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__SourceColumnAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtractAccess().getSourceColumnSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getExtractAccess().getSourceColumnSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__SelectorAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtractAccess().getSelectorSelectorParserRuleCall_6_0()); }
		ruleSelector
		{ after(grammarAccess.getExtractAccess().getSelectorSelectorParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extract__ComparatorAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtractAccess().getComparatorComparatorParserRuleCall_9_0()); }
		ruleComparator
		{ after(grammarAccess.getExtractAccess().getComparatorComparatorParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__NAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getNINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSelectorAccess().getNINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__KeysAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparatorAccess().getKeysSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getComparatorAccess().getKeysSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparator__KeysAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparatorAccess().getKeysSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getComparatorAccess().getKeysSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__ColumnsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSquashRowsAccess().getColumnsSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getSquashRowsAccess().getColumnsSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquashRows__ColumnsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSquashRowsAccess().getColumnsSTRINGTerminalRuleCall_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSquashRowsAccess().getColumnsSTRINGTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__DenylistAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterAccess().getDenylistFilterDenylistParserRuleCall_1_0()); }
		ruleFilterDenylist
		{ after(grammarAccess.getFilterAccess().getDenylistFilterDenylistParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__ExceptlistAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterAccess().getExceptlistFilterExceptlistParserRuleCall_2_0()); }
		ruleFilterExceptlist
		{ after(grammarAccess.getFilterAccess().getExceptlistFilterExceptlistParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterDenylist__DenylistAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterDenylistAccess().getDenylistFilterRuleParserRuleCall_1_0()); }
		ruleFilterRule
		{ after(grammarAccess.getFilterDenylistAccess().getDenylistFilterRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExceptlist__ExceptlistAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterExceptlistAccess().getExceptlistFilterRuleParserRuleCall_1_0()); }
		ruleFilterRule
		{ after(grammarAccess.getFilterExceptlistAccess().getExceptlistFilterRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterObjectTypeRule__ColumnPatternAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterObjectTypeRuleAccess().getColumnPatternSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getFilterObjectTypeRuleAccess().getColumnPatternSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterColumnRule__ObjectClassAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterColumnRuleAccess().getObjectClassSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getFilterColumnRuleAccess().getObjectClassSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
